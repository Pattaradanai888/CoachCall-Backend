services:
  app:
    image: ghcr.io/pattaradanai888/coachcall-backend:main  # Will be updated by CI/CD
    # build: .  # Use local build for testing instead of registry
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    environment:
      - PROJECT_NAME=${PROJECT_NAME:-FastAPI Backend}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DATABASE_URL=${DATABASE_URL}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}
      - DEPLOYMENT_DATABASE_URL=${DEPLOYMENT_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - TOKEN_TYPE=${TOKEN_TYPE:-bearer}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES:-10080}
      - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURE_STORAGE_KEY=${AZURE_STORAGE_KEY}
      - AZURE_CONTAINER_NAME=${AZURE_CONTAINER_NAME}
      - COMMUNICATION_SERVICES_CONNECTION_STRING=${COMMUNICATION_SERVICES_CONNECTION_STRING}
      - SENDER_ADDRESS=${SENDER_ADDRESS}
      - CORS_ORIGINS=${CORS_ORIGINS}
    env_file:
      - .env  # Fallback to local .env file
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Memory limits for 1GB VM optimization
    deploy:
      resources:
        limits:
          memory: 400M  # Hard limit - enough for FastAPI
        reservations:
          memory: 200M  # Guaranteed memory

  # Only include monitoring if config files exist
  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      # Only mount config if it exists, otherwise use default
      - ${PWD}/monitoring/prometheus/prometheus.prod.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - app-network
    depends_on:
      - app
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'  # Reduced from 15d default
      - '--storage.tsdb.retention.size=150MB'  # Limit storage size
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    # Memory optimization for 1GB VM
    deploy:
      resources:
        limits:
          memory: 200M  # Reduced from default 400MB
        reservations:
          memory: 100M
    # Use profiles to make monitoring optional
    profiles:
      - monitoring
      - lite    # New lite profile for 1GB VMs
      - all

  # Memory-optimized Grafana for 1GB VM
  grafana:
    image: grafana/grafana:10.4.11
    container_name: grafana-lite
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ${PWD}/monitoring/grafana/grafana-lite.ini:/etc/grafana/grafana.ini:ro  # Memory-optimized config
      - ${PWD}/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ${PWD}/monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ${PWD}/monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - app-network
    environment:
      # Memory optimization settings
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_ALERTING_ENABLED=false  # Disable alerting to save memory
      - GF_EXPLORE_ENABLED=false   # Disable explore feature
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
      # Performance tuning for low memory
      - GF_DATABASE_LOG_QUERIES=false
      - GF_LOG_LEVEL=warn
      - GF_PANELS_ENABLE_ALPHA=false
    # Strict memory limits for 1GB VM
    deploy:
      resources:
        limits:
          memory: 150M  # Reduced from default 200M+
        reservations:
          memory: 75M
    depends_on:
      - prometheus
    profiles:
      - monitoring
      - lite
      - all

networks:
  app-network:
    driver: bridge

volumes:
  app_logs:
  prometheus_data:
  grafana_data:  # Re-added for optimized Grafana
  # Removed loki_data (no longer needed)
