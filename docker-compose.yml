services:
  fastapi-app:
    image: pattaradanai888/fastapi-backend:latest
    container_name: fastapi-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=${DATABASE_URL}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}
      - DEPLOYMENT_DATABASE_URL=${DEPLOYMENT_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - TOKEN_TYPE=${TOKEN_TYPE}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_MINUTES=${REFRESH_TOKEN_EXPIRE_MINUTES}
      - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURE_STORAGE_KEY=${AZURE_STORAGE_KEY}
      - AZURE_CONTAINER_NAME=${AZURE_CONTAINER_NAME}
      - COMMUNICATION_SERVICES_CONNECTION_STRING=${COMMUNICATION_SERVICES_CONNECTION_STRING}
      - SENDER_ADDRESS=${SENDER_ADDRESS}
      - CORS_ORIGINS=${CORS_ORIGINS}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-remote-write-receiver"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - app-network
    depends_on:
      - fastapi-app

  # Loki removed for memory optimization - use docker logs directly
  
  promtail:
    image: grafana/promtail:2.9.8
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    depends_on:
      - fastapi-app  # Changed from loki to fastapi-app since loki is removed

  grafana:
    image: grafana/grafana:10.4.11
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - app-network
    depends_on:
      - prometheus
      # - loki  # Removed - using direct Docker logs instead


networks:
  app-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  # loki_data: removed - no longer needed